#Set global variables and let the innter scripts do the synthesis
suppress_message VHD-4
suppress_message CMD-041

set REPORT_DIR [pwd]/reports
set NETLIST_DIR [pwd]/results
set S_LIB [pwd]/vhdl
set LIBRARY WORK

set dict {

    "FA" { "BEHAVIORAL" }
    "IMM_EXTENDER" { "DATAFLOW" }
    "IV" { "BEHAVIORAL" }
    "LATCH_GENERIC" { "behavioural" }
    "MUX21_GENERIC" { "STRUCTURAL" }
    "MUX21" { "STRUCTURAL" }
    "MUX_GENERIC" { "BEHAVIORAL" }
    "ND2" { "ARCH1" }
    "REG_GENERIC" { "PIPPO" }
    "DELAY_BLOCK" { "structural" }
    "RCA" { "STRUCTURAL" }
    "ACC" { "Structural" }
    "BPU" { "structural_bht" }

    # "DLX_CU" { "CU_HW" }
    # "DLX_DATAPATH" { "dlx_simple" }   ;# ♬ it's not so simple anymooore ♬
    # "IRAM" { "IRam_Beh" } ;#TODO: should we synthesize the behavioral Instruction RAM? probably not.

}

proc callsubdirs {dir} {
  foreach { subdir } [lsort $dir] {
    echo "Entering directory $dir..."
    set olddir [pwd]
    cd $subdir
    foreach { script }  [lsort [ls *.scr] ]  {
      echo "Executing $script..."
      source $script
    }
    echo "Exiting directory $dir..."
    cd $olddir
  }
}

proc compileexactmap {entity {params ""} } {
  variable dict
  variable LIBRARY
  if { [lsearch $dict $entity] >= 0 } {
    #Architecture is defined into the list
    set theArch [lindex [lindex $dict [lsearch $dict $entity] ] 0 ]
    echo "Compiling $entity with architecture $theArch..."
    set arch "-architecture $theArch"
  } else {
    echo "Compiling $entity with default architecture..."
    set arch ""
  }
  set command "elaborate $entity $arch -library $LIBRARY $params"
  eval $command
  compile -exact_map
}

proc do_reports {filename} {
  variable NETLIST_DIR
  variable REPORT_DIR
  write_file -format vhdl -hierarchy -output $NETLIST_DIR/$filename.vhd
  write_file -format verilog -hierarchy -output $NETLIST_DIR/$filename.v
  report_area -nosplit > $REPORT_DIR/${filename}_area.rpt
  report_timing -nworst 10 > $REPORT_DIR/${filename}_timing.rpt
  report_power > $REPORT_DIR/${filename}_power.rpt
}

callsubdirs {vhdl}

#Example of inner script:
#analyze -library $LIBRARY -format vhdl { [lsort [ls *.vhd] ] }
#elaborate P4_ADDER -architecture STRUCTURAL -library DEFAULT -parameters "WIDTH = 32"
#set_max_delay 0.6 -from [all_inputs] -to [all_outputs]
#compile -map_effort high
#write_file -format vhdl -hierarchy -output ./p4_adder_higheffort_generic_netlist.vhd
#write_file -format verilog -hierarchy -output ./p4_adder_higheffort_generic_netlist.v
#report_area -nosplit > p4_adder_higheffort_area.rpt
#report_timing -nworst 10 > p4_adder_higheffort_timing.rpt
#report_power > p4_adder_higheffort_power.rpt
#quit
